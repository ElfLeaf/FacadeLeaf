<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.elfleaf</groupId>
	<artifactId>facadeLeaf</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>facadeLeaf Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<build>
		<finalName>facadeLeaf</finalName>
	</build>

	<!-- 其他远程仓库 -->
	<!-- <repositories> <repository> <id>central</id> <url>http://repo1.maven.org/maven2</url> </repository> </repositories> -->



	<dependencies>
		<!-- 中央仓库检索地址http://search.maven.org/#browse -->

		<!-- spring依赖配置开始 -->
		<!-- spring aop + aspectj -->
		<dependency>
			<!-- spring必须包 -->
			<!-- 基于AOP的Spring特性如声明型事务管理，如果需要使用aop还需要引入aopalliance，aspectjrt，aspectjweaver这3个jar包 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.1</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.1</version>
		</dependency>

		<dependency>
			<!-- spring必须包，它包含访问配置文件、创建和管理bean以及进行（IoC/DI）操作相关的所有类 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring必须包 ,已经包含spring-asm，包含Spring框架基本的核心工具类 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring必须包，为Spring核心提供了大量扩展 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring必须包，spring 表达式语言 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>


		<dependency>
			<!-- spring扩展包 -->
			<!-- 辅助配合junit4测试，让spring依赖注入可单元测试，单元测试还需要引入junit4.1.7 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring扩展包 -->
			<!-- 这个jar 文件包含Spring 一整套mock 类来辅助应用的测试。Spring 测试套件使用了其中大量mock 类 ， 这样测试就更加简单。模拟HttpServletRequest 和HttpServletResponse 类在Web 应用单元测试是 很方便的。并且提供了对JUnit的支持。 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<!-- spring扩展包 -->
			<!-- spring整合第三方的 ORM 映射支持，如 Hibernate 、Ibatis、Jdo以及spring的JPA的支持。 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring扩展包 -->
			<!-- 这个jar 文件包含Web 应用开发时，用到Spring 框架时所需的核心类，包括自动载入Web Application -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring扩展包 -->
			<!-- 这个jar 文件包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring扩展包 -->
			<!-- 第三方扩展包，比如要使用spring集成email发送邮件 ，或者spring集成quartz调度服务，以及对ui模版freemaker等的支持。 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>

		<!-- <dependency> spring扩展包 对Hibernate 3.0/3.1/3.2的支持。 外部依赖spring-jdbc，Hibernate3，(spring-web)。 <groupId>org.springframework</groupId> <artifactId>spring-hibernate3</artifactId> 
			<version>2.0.8</version> </dependency> -->
		<dependency>
			<!-- spring扩展包 -->
			<!-- 这个jar 文件包含对Spring 对JDBC 数据访问进行封装的所有类。 外部依赖spring-beans，spring-dao。 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<!-- spring扩展包 -->
			<!-- 这个jar 文件包含Spring DAO、Spring Transaction 进行数据访问的所有类。为了使用声明型事务支 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-dao</artifactId>
			<version>2.0.8</version>
		</dependency>

		<!-- spring-aspects.jar 提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。 外部依赖。 -->
		<!-- spring-oxm Spring 3.0 新特性 O/X Mapper 在 Java 对象（几乎总是一个 plain old Java object，或简写为 POJO）和 XML 文档之间来回转换 -->
		<!-- <dependency> 提供事务相关功能 <groupId>org.springframework</groupId> <artifactId>spring-tx</artifactId> <version>4.1.0.RELEASE</version> </dependency> -->

		<!-- spring-jms.jar 这个jar包提供了对JMS 1.0.2/1.1的支持类。 外部依赖spring-beans，spring-dao，JMS API。 spring-jca.jar 对JCA 1.0的支持。 外部依赖spring-beans，spring-dao， JCA API。 -->
		<!-- spring-ibatis.jar 对iBATIS SQL Maps的支持。 外部依赖spring-jdbc，iBATIS SQL Maps。 -->
		<!-- spring-jdo.jar 对JDO 1.0/2.0的支持。 外部依赖spring-jdbc， JDO API， (spring-web)。 spring-jpa.jar 对JPA 1.0的支持。 外部依赖spring-jdbc， JPA API， (spring-web)。 spring-hibernate2.jar 
			对Hibernate 2.1的支持，已经不建议使用。 外部依赖spring-jdbc，Hibernate2，(spring-web)。 spring-hibernate3.jar 对Hibernate 3.0/3.1/3.2的支持。 外部依赖spring-jdbc，Hibernate3，(spring-web)。 
			spring-toplink.jar 对TopLink框架的支持。 外部依赖spring-jdbc，TopLink。 spring-ibatis.jar 对iBATIS SQL Maps的支持。 外部依赖spring-jdbc，iBATIS SQL Maps。 -->
		<!-- spring依赖配置结束 -->


		<!-- hibernate依赖开始 -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-core</artifactId> <version>4.1.6.Final</version> </dependency> -->

		<!-- <dependency> hibernate必要事务依赖 <groupId>javax.transaction</groupId> <artifactId>jta</artifactId> <version>1.1</version> </dependency> -->
		<!-- <dependency> MySQL驱动 在使用JDBC连接数据库时，需要使用相应的驱动程序。 不同的数据库、不同的版本，其驱动程序也不同，也可能有多个驱动程序可用。 这些驱动程序都是一个jar的包，通常有该数据库的发布厂商或其他的机构提供。 <groupId>mysql</groupId> 
			<artifactId>mysql-connector-java</artifactId> <version>5.1.21</version> </dependency> -->
		<!-- <dependency> Hibernate用它来实现PO字节码的动态生成，非常核心的库，必须使用的jar包 <groupId>cglib</groupId> <artifactId>cglib</artifactId> <version>3.0</version> </dependency> -->
		<!-- <dependency> 数据源必要包 ，在spring配置文件中指定hibernate数据源的必要包 <groupId>commons-dbcp</groupId> <artifactId>commons-dbcp</artifactId> <version>1.2.2</version> 
			</dependency> -->
		<!-- hibernate依赖结束 -->

		<!-- log4j依赖开始 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<!-- log4j依赖结束 -->

		<!-- junit依赖开始 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
		</dependency>
		<!-- junit依赖结束 -->

		<!-- spring-junit测试用，需要 servlet-api -->
		<!-- <dependency> <groupId>org.apache.tomcat</groupId> <artifactId>servlet-api</artifactId> <version>6.0.41</version> </dependency> -->

		<!-- mybatis依赖开始 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<!-- 配合ASM提供效率代理类 -->
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<!-- 连接池 -->
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<!-- c3p0连接池 -->
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>
		<dependency>
			<!-- MySQL驱动 在使用JDBC连接数据库时，需要使用相应的驱动程序。 不同的数据库、不同的版本， 其驱动程序也不同，也可能有多个驱动程序可用。 这些驱动程序都是一个jar的包，通常有该数据库的发布厂商或其他的机构提供。 -->
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.21</version>
		</dependency>
		<!-- mybatis依赖结束 -->


		<!--tiles jar 依赖 -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>3.0.4</version>
		</dependency>


		<!-- shiro依赖 -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-all</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-cas</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>1.2.3</version>
        </dependency>
        <!-- shiro相关依赖 -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- 其他常用开发包 -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
		<dependency>    
		    <groupId>net.sf.json-lib</groupId>    
		    <artifactId>json-lib</artifactId>    
		    <version>2.4</version>    
		    <classifier>jdk15</classifier>    
        </dependency>  
		<!-- 其他常用开发包结束 -->
	</dependencies>







</project>
